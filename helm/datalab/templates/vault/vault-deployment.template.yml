{{- if .Values.deployVault -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
        environment: {{ .Values.environment }}
    spec:
      initContainers:
        - name: create-vault-folders
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - mkdir -p /mnt/vault/vault-1
          volumeMounts:
          - mountPath: /mnt/vault
            name: vault-volume-1
        - name: set-directory-owner
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - chown 100:1000 /mnt/vault/vault-1
          volumeMounts:
          - mountPath: /mnt/vault
            name: vault-volume-1
      containers:
        - name: vault
          image: {{ .Values.vault.imageName }}:{{ .Values.vault.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8200
          env:
            - name: VAULT_LOCAL_CONFIG
              value:
                  storage "file" {
                    path = "/vault/data/vault-1"
                  }

                  listener "tcp" {
                    address     = "0.0.0.0:8200"
                    tls_disable = 1
                  }
                  disable_mlock = true
          args:
            - server
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          volumeMounts:
            - mountPath: /vault/data
              name: vault-volume-1
      volumes:
        - name: vault-volume-1
          persistentVolumeClaim:
            claimName: {{ .Values.datalabVolume }}-internal-claim
{{- end -}}
